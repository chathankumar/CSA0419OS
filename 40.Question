#include<stdio.h>
#include<stdlib.h>

int abs_diff(int a, int b) {
    return abs(a - b);
}

void sort_tracks(int *tracks, int numTracks) {
    for (int i = 0; i < numTracks - 1; i++) {
        for (int j = 0; j < numTracks - i - 1; j++) {
            if (tracks[j] > tracks[j + 1]) {
                int temp = tracks[j];
                tracks[j] = tracks[j + 1];
                tracks[j + 1] = temp;
            }
        }
    }
}

int findIndex(int *tracks, int numTracks, int currentTrack) {
    for (int i = 0; i < numTracks; i++) {
        if (tracks[i] > currentTrack) {
            return i;
        }
    }

    return -1;
}

int main() {
    int numTracks = 5;
    int tracks[] = {55, 58, 60, 70, 18};
    int currentTrack = 50;
    int totalHeadMovement = 0;

    sort_tracks(tracks, numTracks);

    printf("Track positions: ");
    for (int i = 0; i < numTracks; i++) {
        printf("%d ", tracks[i]);
    }
    printf("\n\n");

    printf("Starting head position: %d\n", currentTrack);
    printf("Sequence of head movement: %d ", currentTrack);

    int index = findIndex(tracks, numTracks, currentTrack);

    // Forward direction
    for (int i = index; i < numTracks; i++) {
        totalHeadMovement += abs_diff(currentTrack, tracks[i]);
        currentTrack = tracks[i];
        printf("%d ", currentTrack);
    }

    // Go to the first track
    totalHeadMovement += abs_diff(currentTrack, tracks[0]);
    currentTrack = tracks[0];
    printf("%d ", currentTrack);

    // Continue in the forward direction till the last track
    for (int i = 1; i < index; i++) {
        totalHeadMovement += abs_diff(currentTrack, tracks[i]);
        currentTrack = tracks[i];
        printf("%d ", currentTrack);
    }

    printf("\n\n");
    printf("Total head movement: %d\n", totalHeadMovement);
    printf("Average head movement: %.2f\n", (float)totalHeadMovement / numTracks);

    return 0;
}
